=========================
How to Use MyList Class
=========================

This document defines the class ``MyList``, which inherits from the built-in ``list`` class. It includes a method ``print_sorted()`` that prints the list in ascending order.

Class Definition
================

::

    class MyList(list):
        """Inherits from the built-in list class and provides a method to print a sorted version of the list."""

        def print_sorted(self):
            """Prints the list, sorted in ascending order (without modifying the original list)."""
            print(sorted(self))

Usage
=====

Check instantiation
===================

::

    >>> class MyList(list):
    ...     """Inherits from the built-in list class and provides a method to print a sorted version of the list."""
    ...     def print_sorted(self):
    ...         """Prints the list, sorted in ascending order (without modifying the original list)."""
    ...         print(sorted(self))
    >>> my_list = MyList()
    >>> isinstance(my_list, MyList)
    True

Check inherits from list
========================

::

    >>> isinstance(my_list, list)
    True

Check __str__
=============

::

    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> print(my_list)
    [1, 4]

Check append()
==============

::

    >>> my_list.append(3)
    >>> print(my_list)
    [1, 4, 3]

Check print_sorted() with sorted append
=======================================

::

    >>> my_list = MyList()
    >>> my_list.extend([1, 2, 3])
    >>> my_list.print_sorted()
    [1, 2, 3]

Check print_sorted() with not sorted append
===========================================

::

    >>> my_list = MyList()
    >>> my_list.extend([4, 2, 5])
    >>> my_list.print_sorted()
    [2, 4, 5]

Check print_sorted() with no sorted append with negative numbers
================================================================

::

    >>> my_list = MyList()
    >>> my_list.extend([3, -1, 4, -5])
    >>> my_list.print_sorted()
    [-5, -1, 3, 4]

Check print_sorted() with empty list
====================================

::

    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Check print_sorted() returns a new list
=======================================

::

    >>> my_list = MyList()
    >>> my_list.extend([10, 3, 7])
    >>> my_list.print_sorted()
    [3, 7, 10]
    >>> print(my_list)
    [10, 3, 7]